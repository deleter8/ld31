#load these from another file, whether different or same format
set g_window_w 1024#1366#1024
set g_window_h 576#768#576
set g_current_map ""
set g_current_map_region ""
set g_control_type km #km (keyboard&mouse), gp (gamepad) <- scripter defined 
                      #not system hardcoded
set g_control_auto $true

import resources

#this will operate first, masking any interior values to exterior mapping
def_input_mapping back
  def_in keypress 36
  def_in gp_back

def_context main_frame
  def_attrib sprite title 0 0
  def_attrib sprite city_background -700 420
  def_attrib sprite game_title 2050 1175
  def_attrib music menu
  #def_attrib text city 2055 1100 253 #don't like how this looks
  def_anim show
    def_step
      ease opacity squared 0 1 100
      ease volume squared 0 1 200
  def_anim hide
    def_step
      ease opacity squared 1 0 100
      ease volume squared 1 0 200

#things defined in view actually exist in context, view is used for run-time
#switching of context 'face'
def_view main_menu
  def_selector box #selectors are a means of showing a keyboard/gamepad cursor
                   #for menus and other select tasks
    def_attrib min_width 120
    def_attrib auto_size true
    def_attrib move_speed 300 #pixels/s
    def_attrib easing sinevel #todo: create sine-vel, ie method where sin is 
                              #used to calc velocity rather than pos of move
    def_attrib visible first_move #never, first_move, always
    
  def_element start_label
    def_attrib selection can-select:true order:0
    def_attrib text start 10 -25 156
    def_handler gp_select
      set_control_if_auto gp
      emit_event start_game
    def_handler mouseclick
      set_control_if_auto km
      emit_event start_game
    #def_handler mouseenter
    #  loop_anim bouncy
    #def_handler mouseleave
    #  stop_anim bouncy
    def_anim bouncy
      def_step
        ease scale sine .9 1 300
  def_element settings_label
    def_attrib selection can_select:true order:1
    def_attrib text settings 10 175 156
    def_handler gp_select
      if_true $g_control_auto set(var:g_control_type value:gp)
      emit_event config_settings
    def_handler mouseclick
      emit_event config_settings
  def_element quit_label
    def_attrib selection can-select:true order:2
    def_attrib text quit 10 365 156
    def_handler mouseclick
      emit_event quit

  def_anim show
    def_step
      ease opacity squared 0 1 100
  def_anim hide
    def_step
      ease opacity squared 1 0 100


def_context main_menu
#  def_handler start_game
#    play_sound menu_click
#    run_seq start_game
#  def_handler config_settings
#    play_sound menu_click
#    run_seq main_to_settings
#  def_handler quit
#    play_sound menu_click
#    quit_game
  def_element start_label
    def_attrib selectable value:true order:0
    def_attrib text start 10 -25 156
    def_handler mouseclick
      play_sound menu_click
      run_seq start_game
  def_element settings_label
    def_attrib text settings 10 175 156
    def_handler mouseclick
      play_sound menu_click
      run_seq main_to_settings

  def_element quit_label
    def_attrib text quit 10 365 156
    def_handler mouseclick
      play_sound menu_click
      quit_game

  def_handler back
    quit_game

  def_anim show
    def_step
      ease opacity squared 0 1 100
  def_anim hide
    def_step
      ease opacity squared 1 0 100

def_context settings_menu
  def_element musiclevel_label
    def_attrib text music 10 -25 156
    #def_attrib value music_volume 1530 560
  def_element musiclevel_down
    def_attrib text lt 600 -25 156
    def_handler mouseclick
      lower music_volume
  def_element musiclevel_up
    def_attrib text gt 800 -25 156
    def_handler mouseclick
      raise music_volume
  
  def_element soundlevel_label
    def_attrib text sounds 10 175 156
    #def_attrib value audio_volume 1530 860
  def_element soundlevel_down
    def_attrib text lt 600 175 156
    def_handler mouseclick
      lower audio_volume
      play_sound menu_click
  def_element soundlevel_up
    def_attrib text gt 800 175 156
    def_handler mouseclick
      raise audio_volume
      play_sound menu_click

  def_element back_label
    def_attrib text back 10 365 156
    def_handler mouseclick
      play_sound menu_click
      run_seq settings_to_main

  def_handler back
    run_seq settings_to_main

  def_anim show
    def_step
      ease opacity squared 0 1 100
  def_anim hide
    def_step
      ease opacity squared 1 0 100

def_seq init_menu
  def_step
    push_context main_frame
    push_context main_menu
    run_anim main_frame.show
    run_anim main_menu.show

def_seq main_to_settings
  def_step
    run_anim main_menu.hide
  def_step
    pop_context main_menu  
    push_context settings_menu
    run_anim settings_menu.show

def_seq settings_to_main
  def_step
    run_anim settings_menu.hide
  def_step
    pop_context settings_menu
    push_context main_menu
    run_anim main_menu.show

def_seq start_game
  def_step
    run_anim main_frame.hide
    run_anim main_menu.hide
  def_step
    pop_context main_menu
    pop_context main_frame
  def_step
    push_context game
    run_anim game.show

def_seq end_game
  def_step
    run_anim game.hide
  def_step
    pop_context game
    run_seq init_menu

def_data map
  def_layer ground type:tiled width:68 height:40
    def_attrib tile_size 160 160
    def_attrib texture roads
  def_layer roads type:tiled width:68 height:40
    def_attrib tile_size 160 160
    def_attrib texture roads
    def_attrib offset 0 -80
    def_property is_intersection type:bool default:false
  def_layer building_zones type:sparse
    def_attrib visible false
    def_property zone_type type:string default:empty
    def_attrib texture buildings
    def_object zone1
      def_pos 2 2
      def_tex_index 3
      def_trait building_container #map turns this into selectable/clickable. def_trait elsewhere specifies this behavior


#tiled layers are filled grids of equivalent size. they always have a "tiles"
#object that has the tile data, tex_index(int). on top, adding property gives more
#data to each tile

#sparse layers are loose layers of things w/various sizes, shapes, & positions
#these are a list rather than a grid. they have default properties of 
#position, shape, size, rotation, tex_index (sprite), index(id of thing pressed)

def_map map1
  def_layer
    def_texture roads
    def_data map1layer0
  def_layer
    def_texture roads
    def_data map1layer1
    def_offset 0 -80
    #hypothetically data here

def_context game
  def_attrib music game1
  def_attrib map map1
  def_handler keypress 0
    play_sound jump2
  def_handler back
    run_seq end_game
  
  def_anim show
    def_step
      ease volume squared 0 1 200
  def_anim hide
    def_step
      ease volume squared 1 0 200

def_view game_city_gp
  def_mode selecting
    def_handler gp_select #gamepad select
      emit_event zoom_in

#todo: remember, use mouseclick and mousealtclick, not "right/left"
def_view game_city_km #keyboard and mouse view
  def_mode selecting
    def_handler mouseclick map.zoom_areas #TODO!!!!
      set g_current_map_region $event.target
      run_seq show_map_region
    
def_context game_city_context
  def_attrib map $g_current_map
  
  def_handler zoom_in
    set g_current_map_region $s_map_region
    run_seq show_map_region


def_seq show_map_region
  def_step
    disable game.map.zoom_areas #TODO!!!!
    push_context game_region_view
    
def_seq show_whole_map
  def_step
    pop_context game_region_view
    enable game.map.zoom_areas
    

open_window $g_window_w $g_window_h "Dare the Thirty First" #fullscreen

run_seq init_menu
